// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// integrand_ds_alt
arma::rowvec integrand_ds_alt(arma::rowvec endog, arma::rowvec exog_lead, double gamma, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, int N, arma::rowvec upper, arma::rowvec lower, bool cheby);
RcppExport SEXP edsProjection_integrand_ds_alt(SEXP endogSEXP, SEXP exog_leadSEXP, SEXP gammaSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::rowvec >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type exog_lead(exog_leadSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(integrand_ds_alt(endog, exog_lead, gamma, coeffs_cont, n_exog, n_endog, n_cont, N, upper, lower, cheby));
    return __result;
END_RCPP
}
// euler_hat_ds_alt
arma::rowvec euler_hat_ds_alt(arma::rowvec exog, arma::rowvec endog, arma::rowvec cont, arma::mat exog_innov_integ, double betta, double gamma, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, int n_fwd, arma::rowvec rho, int n_integ, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, arma::rowvec weights, bool print_rhs);
RcppExport SEXP edsProjection_euler_hat_ds_alt(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP exog_innov_integSEXP, SEXP bettaSEXP, SEXP gammaSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP n_fwdSEXP, SEXP rhoSEXP, SEXP n_integSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP weightsSEXP, SEXP print_rhsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::rowvec >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_innov_integ(exog_innov_integSEXP);
    Rcpp::traits::input_parameter< double >::type betta(bettaSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_fwd(n_fwdSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type n_integ(n_integSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< bool >::type print_rhs(print_rhsSEXP);
    __result = Rcpp::wrap(euler_hat_ds_alt(exog, endog, cont, exog_innov_integ, betta, gamma, coeffs_cont, n_exog, n_endog, n_cont, n_fwd, rho, n_integ, N, upper, lower, cheby, weights, print_rhs));
    return __result;
END_RCPP
}
// contemp_eqns_ds_alt
arma::rowvec contemp_eqns_ds_alt(arma::mat exog, arma::mat endog, arma::rowvec cont, List params, List extra_args);
RcppExport SEXP edsProjection_contemp_eqns_ds_alt(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP paramsSEXP, SEXP extra_argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< List >::type extra_args(extra_argsSEXP);
    __result = Rcpp::wrap(contemp_eqns_ds_alt(exog, endog, cont, params, extra_args));
    return __result;
END_RCPP
}
// integrand_ds
arma::rowvec integrand_ds(arma::rowvec endog, arma::rowvec exog_lead, double gamma, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, int N, arma::rowvec upper, arma::rowvec lower, bool cheby);
RcppExport SEXP edsProjection_integrand_ds(SEXP endogSEXP, SEXP exog_leadSEXP, SEXP gammaSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::rowvec >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type exog_lead(exog_leadSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(integrand_ds(endog, exog_lead, gamma, coeffs_cont, n_exog, n_endog, n_cont, N, upper, lower, cheby));
    return __result;
END_RCPP
}
// euler_hat_ds
arma::rowvec euler_hat_ds(arma::rowvec exog, arma::rowvec endog, arma::rowvec cont, arma::mat exog_innov_integ, double betta, double gamma, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, int n_fwd, arma::rowvec rho, int n_integ, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, arma::rowvec weights, bool print_rhs);
RcppExport SEXP edsProjection_euler_hat_ds(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP exog_innov_integSEXP, SEXP bettaSEXP, SEXP gammaSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP n_fwdSEXP, SEXP rhoSEXP, SEXP n_integSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP weightsSEXP, SEXP print_rhsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::rowvec >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_innov_integ(exog_innov_integSEXP);
    Rcpp::traits::input_parameter< double >::type betta(bettaSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_fwd(n_fwdSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type n_integ(n_integSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< bool >::type print_rhs(print_rhsSEXP);
    __result = Rcpp::wrap(euler_hat_ds(exog, endog, cont, exog_innov_integ, betta, gamma, coeffs_cont, n_exog, n_endog, n_cont, n_fwd, rho, n_integ, N, upper, lower, cheby, weights, print_rhs));
    return __result;
END_RCPP
}
// contemp_eqns_ds
arma::rowvec contemp_eqns_ds(arma::mat exog, arma::mat endog, arma::rowvec cont, List params, List extra_args);
RcppExport SEXP edsProjection_contemp_eqns_ds(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP paramsSEXP, SEXP extra_argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< List >::type extra_args(extra_argsSEXP);
    __result = Rcpp::wrap(contemp_eqns_ds(exog, endog, cont, params, extra_args));
    return __result;
END_RCPP
}
// keep_mat
arma::mat keep_mat(arma::mat& X, arma::vec keep);
RcppExport SEXP edsProjection_keep_mat(SEXP XSEXP, SEXP keepSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type keep(keepSEXP);
    __result = Rcpp::wrap(keep_mat(X, keep));
    return __result;
END_RCPP
}
// pcd_scaling
arma::mat pcd_scaling(arma::mat& X);
RcppExport SEXP edsProjection_pcd_scaling(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    __result = Rcpp::wrap(pcd_scaling(X));
    return __result;
END_RCPP
}
// eds_keep
arma::vec eds_keep(arma::mat& X_norm, arma::vec& eps);
RcppExport SEXP edsProjection_eds_keep(SEXP X_normSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type X_norm(X_normSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type eps(epsSEXP);
    __result = Rcpp::wrap(eds_keep(X_norm, eps));
    return __result;
END_RCPP
}
// p_eps
arma::mat p_eps(arma::mat& X, arma::vec& eps);
RcppExport SEXP edsProjection_p_eps(SEXP XSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type eps(epsSEXP);
    __result = Rcpp::wrap(p_eps(X, eps));
    return __result;
END_RCPP
}
// p_eps_const
arma::mat p_eps_const(arma::mat& X, double eps);
RcppExport SEXP edsProjection_p_eps_const(SEXP XSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    __result = Rcpp::wrap(p_eps_const(X, eps));
    return __result;
END_RCPP
}
// normal_kernel_density
arma::vec normal_kernel_density(arma::mat& X, double h);
RcppExport SEXP edsProjection_normal_kernel_density(SEXP XSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    __result = Rcpp::wrap(normal_kernel_density(X, h));
    return __result;
END_RCPP
}
// almost_ergodic_indices
arma::vec almost_ergodic_indices(arma::mat& X, double delta, double h);
RcppExport SEXP edsProjection_almost_ergodic_indices(SEXP XSEXP, SEXP deltaSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    __result = Rcpp::wrap(almost_ergodic_indices(X, delta, h));
    return __result;
END_RCPP
}
// almost_ergodic
arma::mat almost_ergodic(arma::mat& X, double delta, double h);
RcppExport SEXP edsProjection_almost_ergodic(SEXP XSEXP, SEXP deltaSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    __result = Rcpp::wrap(almost_ergodic(X, delta, h));
    return __result;
END_RCPP
}
// p_eps_cheap_idx
arma::vec p_eps_cheap_idx(arma::mat& X, arma::vec& eps, double delta, double h);
RcppExport SEXP edsProjection_p_eps_cheap_idx(SEXP XSEXP, SEXP epsSEXP, SEXP deltaSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    __result = Rcpp::wrap(p_eps_cheap_idx(X, eps, delta, h));
    return __result;
END_RCPP
}
// p_eps_cheap
arma::mat p_eps_cheap(arma::mat& X, arma::vec& eps, double delta, double h);
RcppExport SEXP edsProjection_p_eps_cheap(SEXP XSEXP, SEXP epsSEXP, SEXP deltaSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    __result = Rcpp::wrap(p_eps_cheap(X, eps, delta, h));
    return __result;
END_RCPP
}
// p_eps_cheap_const_idx
arma::vec p_eps_cheap_const_idx(arma::mat& X, double eps, double delta, double h);
RcppExport SEXP edsProjection_p_eps_cheap_const_idx(SEXP XSEXP, SEXP epsSEXP, SEXP deltaSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    __result = Rcpp::wrap(p_eps_cheap_const_idx(X, eps, delta, h));
    return __result;
END_RCPP
}
// p_eps_cheap_const
arma::mat p_eps_cheap_const(arma::mat& X, double eps, double delta, double h);
RcppExport SEXP edsProjection_p_eps_cheap_const(SEXP XSEXP, SEXP epsSEXP, SEXP deltaSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    __result = Rcpp::wrap(p_eps_cheap_const(X, eps, delta, h));
    return __result;
END_RCPP
}
// integrand_irbc
arma::rowvec integrand_irbc(arma::rowvec endog, arma::rowvec exog_lead, double gamma, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, int N, arma::rowvec upper, arma::rowvec lower, bool cheby);
RcppExport SEXP edsProjection_integrand_irbc(SEXP endogSEXP, SEXP exog_leadSEXP, SEXP gammaSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::rowvec >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type exog_lead(exog_leadSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(integrand_irbc(endog, exog_lead, gamma, coeffs_cont, n_exog, n_endog, n_cont, N, upper, lower, cheby));
    return __result;
END_RCPP
}
// euler_hat_irbc
arma::rowvec euler_hat_irbc(arma::rowvec exog, arma::rowvec endog, arma::rowvec cont, arma::mat exog_innov_integ, double betta, double gamma, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, int n_fwd, arma::rowvec rho, int n_integ, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, arma::rowvec weights, bool print_rhs);
RcppExport SEXP edsProjection_euler_hat_irbc(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP exog_innov_integSEXP, SEXP bettaSEXP, SEXP gammaSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP n_fwdSEXP, SEXP rhoSEXP, SEXP n_integSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP weightsSEXP, SEXP print_rhsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::rowvec >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_innov_integ(exog_innov_integSEXP);
    Rcpp::traits::input_parameter< double >::type betta(bettaSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_fwd(n_fwdSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type n_integ(n_integSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< bool >::type print_rhs(print_rhsSEXP);
    __result = Rcpp::wrap(euler_hat_irbc(exog, endog, cont, exog_innov_integ, betta, gamma, coeffs_cont, n_exog, n_endog, n_cont, n_fwd, rho, n_integ, N, upper, lower, cheby, weights, print_rhs));
    return __result;
END_RCPP
}
// contemp_eqns_irbc
arma::rowvec contemp_eqns_irbc(arma::mat exog, arma::mat endog, arma::rowvec cont, List params, List extra_args);
RcppExport SEXP edsProjection_contemp_eqns_irbc(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP paramsSEXP, SEXP extra_argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< List >::type extra_args(extra_argsSEXP);
    __result = Rcpp::wrap(contemp_eqns_irbc(exog, endog, cont, params, extra_args));
    return __result;
END_RCPP
}
// irbc_reg
arma::rowvec irbc_reg(arma::mat exog, arma::mat endog, arma::rowvec cont, arma::mat exog_innov_integ, List params, arma::mat coeffs, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, int n_fwd, arma::rowvec rho, int n_integ, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, arma::rowvec weights, List extra_args, bool print_rhs);
RcppExport SEXP edsProjection_irbc_reg(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP exog_innov_integSEXP, SEXP paramsSEXP, SEXP coeffsSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP n_fwdSEXP, SEXP rhoSEXP, SEXP n_integSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP weightsSEXP, SEXP extra_argsSEXP, SEXP print_rhsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_innov_integ(exog_innov_integSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_fwd(n_fwdSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type n_integ(n_integSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< List >::type extra_args(extra_argsSEXP);
    Rcpp::traits::input_parameter< bool >::type print_rhs(print_rhsSEXP);
    __result = Rcpp::wrap(irbc_reg(exog, endog, cont, exog_innov_integ, params, coeffs, coeffs_cont, n_exog, n_endog, n_cont, n_fwd, rho, n_integ, N, upper, lower, cheby, weights, extra_args, print_rhs));
    return __result;
END_RCPP
}
// euler_hat_grid
arma::mat euler_hat_grid(arma::mat coeffs, arma::mat coeffs_cont, arma::mat X, int lags, List params, int n_exog, int n_endog, int n_cont, int n_fwd, arma::rowvec rho, arma::rowvec sig_eps, int n_integ, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, arma::mat exog_innov_mc, bool quad, int n_nodes, std::string model);
RcppExport SEXP edsProjection_euler_hat_grid(SEXP coeffsSEXP, SEXP coeffs_contSEXP, SEXP XSEXP, SEXP lagsSEXP, SEXP paramsSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP n_fwdSEXP, SEXP rhoSEXP, SEXP sig_epsSEXP, SEXP n_integSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP exog_innov_mcSEXP, SEXP quadSEXP, SEXP n_nodesSEXP, SEXP modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type lags(lagsSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_fwd(n_fwdSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type sig_eps(sig_epsSEXP);
    Rcpp::traits::input_parameter< int >::type n_integ(n_integSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_innov_mc(exog_innov_mcSEXP);
    Rcpp::traits::input_parameter< bool >::type quad(quadSEXP);
    Rcpp::traits::input_parameter< int >::type n_nodes(n_nodesSEXP);
    Rcpp::traits::input_parameter< std::string >::type model(modelSEXP);
    __result = Rcpp::wrap(euler_hat_grid(coeffs, coeffs_cont, X, lags, params, n_exog, n_endog, n_cont, n_fwd, rho, sig_eps, n_integ, N, upper, lower, cheby, exog_innov_mc, quad, n_nodes, model));
    return __result;
END_RCPP
}
// contemp_eqns_irbc_grid
arma::mat contemp_eqns_irbc_grid(arma::mat X, int lags, List params, int n_exog, int n_endog, int n_cont, List extra_args, std::string model);
RcppExport SEXP edsProjection_contemp_eqns_irbc_grid(SEXP XSEXP, SEXP lagsSEXP, SEXP paramsSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP extra_argsSEXP, SEXP modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type lags(lagsSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< List >::type extra_args(extra_argsSEXP);
    Rcpp::traits::input_parameter< std::string >::type model(modelSEXP);
    __result = Rcpp::wrap(contemp_eqns_irbc_grid(X, lags, params, n_exog, n_endog, n_cont, extra_args, model));
    return __result;
END_RCPP
}
// integrand_ngm_2
arma::rowvec integrand_ngm_2(arma::mat exog, arma::mat endog, arma::rowvec exog_lead, List params, arma::mat coeffs, int n_exog, int n_endog, int N, arma::rowvec upper, arma::rowvec lower, bool cheby);
RcppExport SEXP edsProjection_integrand_ngm_2(SEXP exogSEXP, SEXP endogSEXP, SEXP exog_leadSEXP, SEXP paramsSEXP, SEXP coeffsSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type exog_lead(exog_leadSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(integrand_ngm_2(exog, endog, exog_lead, params, coeffs, n_exog, n_endog, N, upper, lower, cheby));
    return __result;
END_RCPP
}
// euler_hat_ngm_2
arma::rowvec euler_hat_ngm_2(arma::mat exog, arma::mat endog, arma::rowvec cont, arma::mat exog_innov_integ, List params, arma::mat coeffs, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, arma::rowvec rho, int n_integ, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, arma::rowvec weights, bool print_rhs);
RcppExport SEXP edsProjection_euler_hat_ngm_2(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP exog_innov_integSEXP, SEXP paramsSEXP, SEXP coeffsSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP rhoSEXP, SEXP n_integSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP weightsSEXP, SEXP print_rhsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_innov_integ(exog_innov_integSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type n_integ(n_integSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< bool >::type print_rhs(print_rhsSEXP);
    __result = Rcpp::wrap(euler_hat_ngm_2(exog, endog, cont, exog_innov_integ, params, coeffs, coeffs_cont, n_exog, n_endog, n_cont, rho, n_integ, N, upper, lower, cheby, weights, print_rhs));
    return __result;
END_RCPP
}
// integrand_ngm_cont_2
arma::rowvec integrand_ngm_cont_2(arma::mat exog, arma::mat endog, arma::rowvec cont, arma::rowvec exog_lead, List params, arma::mat coeffs, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, int N, arma::rowvec upper, arma::rowvec lower, bool cheby);
RcppExport SEXP edsProjection_integrand_ngm_cont_2(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP exog_leadSEXP, SEXP paramsSEXP, SEXP coeffsSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type exog_lead(exog_leadSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(integrand_ngm_cont_2(exog, endog, cont, exog_lead, params, coeffs, coeffs_cont, n_exog, n_endog, n_cont, N, upper, lower, cheby));
    return __result;
END_RCPP
}
// euler_hat_ngm_cont_2
arma::rowvec euler_hat_ngm_cont_2(arma::mat exog, arma::mat endog, arma::rowvec cont, arma::mat exog_innov_integ, List params, arma::mat coeffs, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, arma::rowvec rho, int n_integ, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, arma::rowvec weights, bool print_rhs);
RcppExport SEXP edsProjection_euler_hat_ngm_cont_2(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP exog_innov_integSEXP, SEXP paramsSEXP, SEXP coeffsSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP rhoSEXP, SEXP n_integSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP weightsSEXP, SEXP print_rhsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_innov_integ(exog_innov_integSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type n_integ(n_integSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< bool >::type print_rhs(print_rhsSEXP);
    __result = Rcpp::wrap(euler_hat_ngm_cont_2(exog, endog, cont, exog_innov_integ, params, coeffs, coeffs_cont, n_exog, n_endog, n_cont, rho, n_integ, N, upper, lower, cheby, weights, print_rhs));
    return __result;
END_RCPP
}
// con_eqns_ngm_2
arma::rowvec con_eqns_ngm_2(arma::mat exog, arma::mat endog, List params, arma::mat coeffs, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, int N, arma::rowvec upper, arma::rowvec lower, bool cheby);
RcppExport SEXP edsProjection_con_eqns_ngm_2(SEXP exogSEXP, SEXP endogSEXP, SEXP paramsSEXP, SEXP coeffsSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(con_eqns_ngm_2(exog, endog, params, coeffs, coeffs_cont, n_exog, n_endog, n_cont, N, upper, lower, cheby));
    return __result;
END_RCPP
}
// ngm_reg_2
arma::rowvec ngm_reg_2(arma::mat exog, arma::mat endog, arma::rowvec cont, arma::mat exog_innov_integ, List params, arma::mat coeffs, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, arma::rowvec rho, int n_integ, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, arma::rowvec weights, bool print_rhs);
RcppExport SEXP edsProjection_ngm_reg_2(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP exog_innov_integSEXP, SEXP paramsSEXP, SEXP coeffsSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP rhoSEXP, SEXP n_integSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP weightsSEXP, SEXP print_rhsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_innov_integ(exog_innov_integSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type n_integ(n_integSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< bool >::type print_rhs(print_rhsSEXP);
    __result = Rcpp::wrap(ngm_reg_2(exog, endog, cont, exog_innov_integ, params, coeffs, coeffs_cont, n_exog, n_endog, n_cont, rho, n_integ, N, upper, lower, cheby, weights, print_rhs));
    return __result;
END_RCPP
}
// integrand_ngm_cont
double integrand_ngm_cont(arma::mat exog, arma::mat endog, arma::rowvec cont, arma::rowvec exog_lead, List params, arma::mat coeffs, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, int N, arma::rowvec upper, arma::rowvec lower, bool cheby);
RcppExport SEXP edsProjection_integrand_ngm_cont(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP exog_leadSEXP, SEXP paramsSEXP, SEXP coeffsSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type exog_lead(exog_leadSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(integrand_ngm_cont(exog, endog, cont, exog_lead, params, coeffs, coeffs_cont, n_exog, n_endog, n_cont, N, upper, lower, cheby));
    return __result;
END_RCPP
}
// euler_hat_ngm_cont
arma::rowvec euler_hat_ngm_cont(arma::mat exog, arma::mat endog, arma::rowvec cont, arma::mat exog_innov_integ, List params, arma::mat coeffs, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, arma::rowvec rho, int n_integ, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, arma::rowvec weights, bool print_rhs);
RcppExport SEXP edsProjection_euler_hat_ngm_cont(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP exog_innov_integSEXP, SEXP paramsSEXP, SEXP coeffsSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP rhoSEXP, SEXP n_integSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP weightsSEXP, SEXP print_rhsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_innov_integ(exog_innov_integSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type n_integ(n_integSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< bool >::type print_rhs(print_rhsSEXP);
    __result = Rcpp::wrap(euler_hat_ngm_cont(exog, endog, cont, exog_innov_integ, params, coeffs, coeffs_cont, n_exog, n_endog, n_cont, rho, n_integ, N, upper, lower, cheby, weights, print_rhs));
    return __result;
END_RCPP
}
// con_eqns_ngm
arma::rowvec con_eqns_ngm(arma::mat exog, arma::mat endog, List params, arma::mat coeffs, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, int N, arma::rowvec upper, arma::rowvec lower, bool cheby);
RcppExport SEXP edsProjection_con_eqns_ngm(SEXP exogSEXP, SEXP endogSEXP, SEXP paramsSEXP, SEXP coeffsSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(con_eqns_ngm(exog, endog, params, coeffs, coeffs_cont, n_exog, n_endog, n_cont, N, upper, lower, cheby));
    return __result;
END_RCPP
}
// ngm_reg
arma::rowvec ngm_reg(arma::mat exog, arma::mat endog, arma::rowvec cont, arma::mat exog_innov_integ, List params, arma::mat coeffs, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, arma::rowvec rho, int n_integ, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, arma::rowvec weights, bool print_rhs);
RcppExport SEXP edsProjection_ngm_reg(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP exog_innov_integSEXP, SEXP paramsSEXP, SEXP coeffsSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP rhoSEXP, SEXP n_integSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP weightsSEXP, SEXP print_rhsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_innov_integ(exog_innov_integSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type n_integ(n_integSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< bool >::type print_rhs(print_rhsSEXP);
    __result = Rcpp::wrap(ngm_reg(exog, endog, cont, exog_innov_integ, params, coeffs, coeffs_cont, n_exog, n_endog, n_cont, rho, n_integ, N, upper, lower, cheby, weights, print_rhs));
    return __result;
END_RCPP
}
// integrand_ngm
double integrand_ngm(arma::mat exog, arma::mat endog, arma::rowvec exog_lead, List params, arma::mat coeffs, int n_exog, int n_endog, int N, arma::rowvec upper, arma::rowvec lower, bool cheby);
RcppExport SEXP edsProjection_integrand_ngm(SEXP exogSEXP, SEXP endogSEXP, SEXP exog_leadSEXP, SEXP paramsSEXP, SEXP coeffsSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type exog_lead(exog_leadSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(integrand_ngm(exog, endog, exog_lead, params, coeffs, n_exog, n_endog, N, upper, lower, cheby));
    return __result;
END_RCPP
}
// euler_hat_ngm
arma::rowvec euler_hat_ngm(arma::mat exog, arma::mat endog, arma::rowvec cont, arma::mat exog_innov_integ, List params, arma::mat coeffs, arma::mat coeffs_cont, int n_exog, int n_endog, int n_cont, arma::rowvec rho, int n_integ, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, arma::rowvec weights, bool print_rhs);
RcppExport SEXP edsProjection_euler_hat_ngm(SEXP exogSEXP, SEXP endogSEXP, SEXP contSEXP, SEXP exog_innov_integSEXP, SEXP paramsSEXP, SEXP coeffsSEXP, SEXP coeffs_contSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP rhoSEXP, SEXP n_integSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP weightsSEXP, SEXP print_rhsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type endog(endogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type cont(contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_innov_integ(exog_innov_integSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type n_integ(n_integSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< bool >::type print_rhs(print_rhsSEXP);
    __result = Rcpp::wrap(euler_hat_ngm(exog, endog, cont, exog_innov_integ, params, coeffs, coeffs_cont, n_exog, n_endog, n_cont, rho, n_integ, N, upper, lower, cheby, weights, print_rhs));
    return __result;
END_RCPP
}
// idx_increment
arma::urowvec idx_increment(arma::urowvec idx, int N, int K);
RcppExport SEXP edsProjection_idx_increment(SEXP idxSEXP, SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::urowvec >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    __result = Rcpp::wrap(idx_increment(idx, N, K));
    return __result;
END_RCPP
}
// idx_count
int idx_count(int N, int K);
RcppExport SEXP edsProjection_idx_count(SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    __result = Rcpp::wrap(idx_count(N, K));
    return __result;
END_RCPP
}
// idx_create
arma::umat idx_create(int N, int K);
RcppExport SEXP edsProjection_idx_create(SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    __result = Rcpp::wrap(idx_create(N, K));
    return __result;
END_RCPP
}
// ordinary_create
arma::mat ordinary_create(arma::rowvec x, int N, int K);
RcppExport SEXP edsProjection_ordinary_create(SEXP xSEXP, SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    __result = Rcpp::wrap(ordinary_create(x, N, K));
    return __result;
END_RCPP
}
// cheby_create
arma::mat cheby_create(arma::rowvec x, int N, int K);
RcppExport SEXP edsProjection_cheby_create(SEXP xSEXP, SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    __result = Rcpp::wrap(cheby_create(x, N, K));
    return __result;
END_RCPP
}
// basis_cube
arma::cube basis_cube(arma::mat X, int N, int K, bool cheby);
RcppExport SEXP edsProjection_basis_cube(SEXP XSEXP, SEXP NSEXP, SEXP KSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(basis_cube(X, N, K, cheby));
    return __result;
END_RCPP
}
// X_rescale
arma::mat X_rescale(arma::mat X_in, int K, bool pc_rescale);
RcppExport SEXP edsProjection_X_rescale(SEXP X_inSEXP, SEXP KSEXP, SEXP pc_rescaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X_in(X_inSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< bool >::type pc_rescale(pc_rescaleSEXP);
    __result = Rcpp::wrap(X_rescale(X_in, K, pc_rescale));
    return __result;
END_RCPP
}
// X_limits
arma::mat X_limits(arma::mat X_in, arma::rowvec lower, arma::rowvec upper, int M, int K);
RcppExport SEXP edsProjection_X_limits(SEXP X_inSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP MSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X_in(X_inSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    __result = Rcpp::wrap(X_limits(X_in, lower, upper, M, K));
    return __result;
END_RCPP
}
// poly_eval
arma::vec poly_eval(arma::vec a, arma::mat X_in, int N, arma::rowvec lower, arma::rowvec upper, bool cheby);
RcppExport SEXP edsProjection_poly_eval(SEXP aSEXP, SEXP X_inSEXP, SEXP NSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_in(X_inSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(poly_eval(a, X_in, N, lower, upper, cheby));
    return __result;
END_RCPP
}
// poly_eval_core
double poly_eval_core(arma::vec a, arma::mat m_basis, arma::umat indices, int n_terms, int K, int M);
RcppExport SEXP edsProjection_poly_eval_core(SEXP aSEXP, SEXP m_basisSEXP, SEXP indicesSEXP, SEXP n_termsSEXP, SEXP KSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type m_basis(m_basisSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type indices(indicesSEXP);
    Rcpp::traits::input_parameter< int >::type n_terms(n_termsSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    __result = Rcpp::wrap(poly_eval_core(a, m_basis, indices, n_terms, K, M));
    return __result;
END_RCPP
}
// coeff_reg_X
arma::mat coeff_reg_X(arma::mat X_in, int N, arma::rowvec lower, arma::rowvec upper, bool cheby);
RcppExport SEXP edsProjection_coeff_reg_X(SEXP X_inSEXP, SEXP NSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X_in(X_inSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(coeff_reg_X(X_in, N, lower, upper, cheby));
    return __result;
END_RCPP
}
// coeff_reg
arma::vec coeff_reg(arma::vec y, arma::mat X_in, int N, arma::rowvec lower, arma::rowvec upper, bool cheby);
RcppExport SEXP edsProjection_coeff_reg(SEXP ySEXP, SEXP X_inSEXP, SEXP NSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_in(X_inSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(coeff_reg(y, X_in, N, lower, upper, cheby));
    return __result;
END_RCPP
}
// quad_nodes_1d
arma::vec quad_nodes_1d(int n_nodes, double sig, double mu);
RcppExport SEXP edsProjection_quad_nodes_1d(SEXP n_nodesSEXP, SEXP sigSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n_nodes(n_nodesSEXP);
    Rcpp::traits::input_parameter< double >::type sig(sigSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    __result = Rcpp::wrap(quad_nodes_1d(n_nodes, sig, mu));
    return __result;
END_RCPP
}
// quad_weights_1d
arma::vec quad_weights_1d(int n_nodes);
RcppExport SEXP edsProjection_quad_weights_1d(SEXP n_nodesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n_nodes(n_nodesSEXP);
    __result = Rcpp::wrap(quad_weights_1d(n_nodes));
    return __result;
END_RCPP
}
// quad_nodes_weights
List quad_nodes_weights(int n_nodes, int n_dim, arma::vec sig, arma::vec mu);
RcppExport SEXP edsProjection_quad_nodes_weights(SEXP n_nodesSEXP, SEXP n_dimSEXP, SEXP sigSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n_nodes(n_nodesSEXP);
    Rcpp::traits::input_parameter< int >::type n_dim(n_dimSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sig(sigSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    __result = Rcpp::wrap(quad_nodes_weights(n_nodes, n_dim, sig, mu));
    return __result;
END_RCPP
}
// quad_nodes_weights_mat
arma::mat quad_nodes_weights_mat(int n_nodes, int n_dim, arma::vec sig, arma::vec mu);
RcppExport SEXP edsProjection_quad_nodes_weights_mat(SEXP n_nodesSEXP, SEXP n_dimSEXP, SEXP sigSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n_nodes(n_nodesSEXP);
    Rcpp::traits::input_parameter< int >::type n_dim(n_dimSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sig(sigSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    __result = Rcpp::wrap(quad_nodes_weights_mat(n_nodes, n_dim, sig, mu));
    return __result;
END_RCPP
}
// ar1_sim
arma::vec ar1_sim(int n_pds, double rho, double sig_eps, bool init_flag, double init);
RcppExport SEXP edsProjection_ar1_sim(SEXP n_pdsSEXP, SEXP rhoSEXP, SEXP sig_epsSEXP, SEXP init_flagSEXP, SEXP initSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n_pds(n_pdsSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type sig_eps(sig_epsSEXP);
    Rcpp::traits::input_parameter< bool >::type init_flag(init_flagSEXP);
    Rcpp::traits::input_parameter< double >::type init(initSEXP);
    __result = Rcpp::wrap(ar1_sim(n_pds, rho, sig_eps, init_flag, init));
    return __result;
END_RCPP
}
// endog_update_slow
arma::rowvec endog_update_slow(arma::rowvec exog, arma::rowvec endog_old, arma::mat coeffs, int n_exog, int n_endog, int N, arma::rowvec upper, arma::rowvec lower, bool cheby);
RcppExport SEXP edsProjection_endog_update_slow(SEXP exogSEXP, SEXP endog_oldSEXP, SEXP coeffsSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::rowvec >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type endog_old(endog_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(endog_update_slow(exog, endog_old, coeffs, n_exog, n_endog, N, upper, lower, cheby));
    return __result;
END_RCPP
}
// endog_update
arma::rowvec endog_update(arma::rowvec exog, arma::rowvec endog_old, arma::mat coeffs, int n_exog, int n_endog, int N, arma::rowvec upper, arma::rowvec lower, bool cheby);
RcppExport SEXP edsProjection_endog_update(SEXP exogSEXP, SEXP endog_oldSEXP, SEXP coeffsSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::rowvec >::type exog(exogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type endog_old(endog_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(endog_update(exog, endog_old, coeffs, n_exog, n_endog, N, upper, lower, cheby));
    return __result;
END_RCPP
}
// endog_sim
arma::mat endog_sim(int n_out, arma::mat exog_sim, arma::mat coeffs, int N, arma::rowvec upper, arma::rowvec lower, arma::rowvec endog_init, bool cheby, int kappa, int burn, bool lag);
RcppExport SEXP edsProjection_endog_sim(SEXP n_outSEXP, SEXP exog_simSEXP, SEXP coeffsSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP endog_initSEXP, SEXP chebySEXP, SEXP kappaSEXP, SEXP burnSEXP, SEXP lagSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n_out(n_outSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_sim(exog_simSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type endog_init(endog_initSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< int >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< bool >::type lag(lagSEXP);
    __result = Rcpp::wrap(endog_sim(n_out, exog_sim, coeffs, N, upper, lower, endog_init, cheby, kappa, burn, lag));
    return __result;
END_RCPP
}
// cont_sim
arma::mat cont_sim(arma::mat xn_sim, arma::mat coeffs_cont, int N, int n_endog, int n_exog, arma::rowvec upper, arma::rowvec lower, bool cheby);
RcppExport SEXP edsProjection_cont_sim(SEXP xn_simSEXP, SEXP coeffs_contSEXP, SEXP NSEXP, SEXP n_endogSEXP, SEXP n_exogSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type xn_sim(xn_simSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(cont_sim(xn_sim, coeffs_cont, N, n_endog, n_exog, upper, lower, cheby));
    return __result;
END_RCPP
}
// irf_create
arma::mat irf_create(int pds, int n_sim, int N, int shk_idx, arma::rowvec rho, arma::rowvec sig_eps, arma::mat coeffs, arma::rowvec upper, arma::rowvec lower, arma::rowvec init, int n_endog, int n_exog, double shk, bool cheby);
RcppExport SEXP edsProjection_irf_create(SEXP pdsSEXP, SEXP n_simSEXP, SEXP NSEXP, SEXP shk_idxSEXP, SEXP rhoSEXP, SEXP sig_epsSEXP, SEXP coeffsSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP initSEXP, SEXP n_endogSEXP, SEXP n_exogSEXP, SEXP shkSEXP, SEXP chebySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type pds(pdsSEXP);
    Rcpp::traits::input_parameter< int >::type n_sim(n_simSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type shk_idx(shk_idxSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type sig_eps(sig_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type init(initSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< double >::type shk(shkSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    __result = Rcpp::wrap(irf_create(pds, n_sim, N, shk_idx, rho, sig_eps, coeffs, upper, lower, init, n_endog, n_exog, shk, cheby));
    return __result;
END_RCPP
}
// simDS
arma::mat simDS(arma::mat u, List mod, double betta, int y1_idx);
RcppExport SEXP edsProjection_simDS(SEXP uSEXP, SEXP modSEXP, SEXP bettaSEXP, SEXP y1_idxSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type u(uSEXP);
    Rcpp::traits::input_parameter< List >::type mod(modSEXP);
    Rcpp::traits::input_parameter< double >::type betta(bettaSEXP);
    Rcpp::traits::input_parameter< int >::type y1_idx(y1_idxSEXP);
    __result = Rcpp::wrap(simDS(u, mod, betta, y1_idx));
    return __result;
END_RCPP
}
// stoch_simDS
arma::mat stoch_simDS(List mod, arma::rowvec sigma, double betta, int pds, int burn, int y1_idx);
RcppExport SEXP edsProjection_stoch_simDS(SEXP modSEXP, SEXP sigmaSEXP, SEXP bettaSEXP, SEXP pdsSEXP, SEXP burnSEXP, SEXP y1_idxSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type mod(modSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type betta(bettaSEXP);
    Rcpp::traits::input_parameter< int >::type pds(pdsSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type y1_idx(y1_idxSEXP);
    __result = Rcpp::wrap(stoch_simDS(mod, sigma, betta, pds, burn, y1_idx));
    return __result;
END_RCPP
}
// euler_hat
arma::mat euler_hat(arma::mat coeffs, arma::mat coeffs_cont, arma::mat X, std::string model, int lags, List params, int n_exog, int n_endog, int n_cont, arma::rowvec rho, arma::rowvec sig_eps, int n_integ, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, arma::mat exog_innov_mc, bool quad, int n_nodes);
RcppExport SEXP edsProjection_euler_hat(SEXP coeffsSEXP, SEXP coeffs_contSEXP, SEXP XSEXP, SEXP modelSEXP, SEXP lagsSEXP, SEXP paramsSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP rhoSEXP, SEXP sig_epsSEXP, SEXP n_integSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP exog_innov_mcSEXP, SEXP quadSEXP, SEXP n_nodesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< std::string >::type model(modelSEXP);
    Rcpp::traits::input_parameter< int >::type lags(lagsSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type sig_eps(sig_epsSEXP);
    Rcpp::traits::input_parameter< int >::type n_integ(n_integSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_innov_mc(exog_innov_mcSEXP);
    Rcpp::traits::input_parameter< bool >::type quad(quadSEXP);
    Rcpp::traits::input_parameter< int >::type n_nodes(n_nodesSEXP);
    __result = Rcpp::wrap(euler_hat(coeffs, coeffs_cont, X, model, lags, params, n_exog, n_endog, n_cont, rho, sig_eps, n_integ, N, upper, lower, cheby, exog_innov_mc, quad, n_nodes));
    return __result;
END_RCPP
}
// e_cont
arma::mat e_cont(arma::mat coeffs_cont, arma::mat X, int n_exog, int n_endog, int n_cont, arma::rowvec rho, arma::rowvec sig_eps, int n_integ, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, arma::mat exog_innov_mc, bool quad, int n_nodes);
RcppExport SEXP edsProjection_e_cont(SEXP coeffs_contSEXP, SEXP XSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP rhoSEXP, SEXP sig_epsSEXP, SEXP n_integSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP exog_innov_mcSEXP, SEXP quadSEXP, SEXP n_nodesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type sig_eps(sig_epsSEXP);
    Rcpp::traits::input_parameter< int >::type n_integ(n_integSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exog_innov_mc(exog_innov_mcSEXP);
    Rcpp::traits::input_parameter< bool >::type quad(quadSEXP);
    Rcpp::traits::input_parameter< int >::type n_nodes(n_nodesSEXP);
    __result = Rcpp::wrap(e_cont(coeffs_cont, X, n_exog, n_endog, n_cont, rho, sig_eps, n_integ, N, upper, lower, cheby, exog_innov_mc, quad, n_nodes));
    return __result;
END_RCPP
}
// real_cont
List real_cont(arma::mat coeffs_cont, arma::mat X, int n_exog, int n_endog, int n_cont, arma::rowvec rho, arma::rowvec sig_eps, int N, arma::rowvec upper, arma::rowvec lower, bool cheby, int seed);
RcppExport SEXP edsProjection_real_cont(SEXP coeffs_contSEXP, SEXP XSEXP, SEXP n_exogSEXP, SEXP n_endogSEXP, SEXP n_contSEXP, SEXP rhoSEXP, SEXP sig_epsSEXP, SEXP NSEXP, SEXP upperSEXP, SEXP lowerSEXP, SEXP chebySEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type coeffs_cont(coeffs_contSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type n_exog(n_exogSEXP);
    Rcpp::traits::input_parameter< int >::type n_endog(n_endogSEXP);
    Rcpp::traits::input_parameter< int >::type n_cont(n_contSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type sig_eps(sig_epsSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< bool >::type cheby(chebySEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    __result = Rcpp::wrap(real_cont(coeffs_cont, X, n_exog, n_endog, n_cont, rho, sig_eps, N, upper, lower, cheby, seed));
    return __result;
END_RCPP
}
